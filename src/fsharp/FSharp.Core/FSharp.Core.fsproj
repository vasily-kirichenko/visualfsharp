<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <FSharpSourcesRoot>$(MSBuildProjectDirectory)\..\..</FSharpSourcesRoot>
    <ProjectLanguage>FSharp</ProjectLanguage>
    <BuildWith Condition=" '$(Configuration)' == 'Proto' ">LKG</BuildWith>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>

  <Import Project="$(FSharpSourcesRoot)\FSharpSource.Settings.targets" />

  <PropertyGroup>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{DED3BBD7-53F4-428A-8C9F-27968E768605}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AssemblyName>FSharp.Core</AssemblyName>
    <DefineConstants>FSHARP_CORE;$(DefineConstants)</DefineConstants>
    <DefineConstants Condition=" '$(Configuration)' == 'Proto'">BUILDING_WITH_LKG;$(DefineConstants)</DefineConstants>
    <NoWarn>$(NoWarn);45;55;62;75;1204</NoWarn>
    <BaseAddress>0x05000000</BaseAddress>
    <CompilingFsLib>true</CompilingFsLib>
    <AllowCrossTargeting>true</AllowCrossTargeting>
    <OtherFlags>$(OtherFlags) --warnon:1182 --compiling-fslib --extraoptimizationloops:1</OtherFlags>
    <OtherFlags>$(OtherFlags) --warnon:3218</OtherFlags>
    <OtherFlags>$(OtherFlags) --maxerrors:20</OtherFlags>
    <OtherFlags>$(OtherFlags) --warnon:1182 --compiling-fslib --maxerrors:20 --extraoptimizationloops:1</OtherFlags>
    <OtherFlags Condition="'$(TargetDotnetProfile)' == 'net40'">$(OtherFlags) --compiling-fslib-40</OtherFlags>
  </PropertyGroup>

  <!-- Nuget packaging configuration -->
  <ItemGroup>
    <PackageNuspec Include="Testing.FSharp.Core.nuspec" Condition="'$(TargetDotnetProfile)' == 'coreclr'" />
    <None Include="FSharp.Core.runtimeconfig.json"      Condition="'$(TargetDotnetProfile)' == 'coreclr'" ><CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory></None>
  </ItemGroup>

  <ItemGroup Condition="'$(Configuration)' != 'Proto'">
    <CustomAdditionalCompileInputs Include="$(FSharpSourcesRoot)\..\Proto\$(ProtoFlavour)\bin\fsc.exe">
      <Visible>false</Visible>
    </CustomAdditionalCompileInputs>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="FSCore.resx">
      <GenerateSource>true</GenerateSource>
      <GenerateLegacyCode>true</GenerateLegacyCode>
      <GenerateLiterals>false</GenerateLiterals>
      <GeneratedModuleName>Microsoft.FSharp.Core.SR</GeneratedModuleName>
      <Link>FSCore.resx</Link>
    </EmbeddedResource>
    <CompileBefore Include="prim-types-prelude.fsi">
      <Link>Primitives/prim-types-prelude.fsi</Link>
    </CompileBefore>
    <CompileBefore Include="prim-types-prelude.fs">
      <Link>Primitives/prim-types-prelude.fs</Link>
    </CompileBefore>
    <Compile Include="SR.fs" Condition="'$(Configuration)' == 'Proto'">
      <Link>Primitives/SR.fs</Link>
    </Compile>
    <Compile Include="prim-types.fsi">
      <Link>Primitives/prim-types.fsi</Link>
    </Compile>
    <Compile Include="prim-types.fs">
      <Link>Primitives/prim-types.fs</Link>
    </Compile>
    <Compile Include="local.fsi">
      <Link>Collections/local.fsi</Link>
    </Compile>
    <Compile Include="local.fs">
      <Link>Collections/local.fs</Link>
    </Compile>
    <Compile Include="array2.fsi">
      <Link>Collections/array2.fsi</Link>
    </Compile>
    <Compile Include="array2.fs">
      <Link>Collections/array2.fs</Link>
    </Compile>
    <Compile Include="option.fsi">
      <Link>Collections/option.fsi</Link>
    </Compile>
    <Compile Include="option.fs">
      <Link>Collections/option.fs</Link>
    </Compile>
    <Compile Include="result.fsi">
      <Link>Collections/result.fsi</Link>
    </Compile>
    <Compile Include="result.fs">
      <Link>Collections/result.fs</Link>
    </Compile>
    <Compile Include="collections.fsi">
      <Link>Collections/collections.fsi</Link>
    </Compile>
    <Compile Include="collections.fs">
      <Link>Collections/collections.fs</Link>
    </Compile>
    <Compile Include="seqcore.fsi">
      <Link>Collections/seqcore.fsi</Link>
    </Compile>
    <Compile Include="seqcore.fs">
      <Link>Collections/seqcore.fs</Link>
    </Compile>
    <Compile Include="seq.fsi">
      <Link>Collections/seq.fsi</Link>
    </Compile>
    <Compile Include="seq.fs">
      <Link>Collections/seq.fs</Link>
    </Compile>
    <Compile Include="string.fsi">
      <Link>Collections/string.fsi</Link>
    </Compile>
    <Compile Include="string.fs">
      <Link>Collections/string.fs</Link>
    </Compile>
    <Compile Include="list.fsi">
      <Link>Collections/list.fsi</Link>
    </Compile>
    <Compile Include="list.fs">
      <Link>Collections/list.fs</Link>
    </Compile>
    <Compile Include="array.fsi">
      <Link>Collections/array.fsi</Link>
    </Compile>
    <Compile Include="array.fs">
      <Link>Collections/array.fs</Link>
    </Compile>
    <Compile Include="array3.fsi">
      <Link>Collections/array3.fsi</Link>
    </Compile>
    <Compile Include="array3.fs">
      <Link>Collections/array3.fs</Link>
    </Compile>
    <Compile Include="map.fsi">
      <Link>Collections/map.fsi</Link>
    </Compile>
    <Compile Include="map.fs">
      <Link>Collections/map.fs</Link>
    </Compile>
    <Compile Include="set.fsi">
      <Link>Collections/set.fsi</Link>
    </Compile>
    <Compile Include="set.fs">
      <Link>Collections/set.fs</Link>
    </Compile>
    <Compile Include="..\..\utils\reshapedreflection.fs">
      <Link>Reflection/reshapedreflection.fs</Link>
    </Compile>
    <Compile Include="reflect.fsi">
      <Link>Reflection/reflect.fsi</Link>
    </Compile>
    <Compile Include="reflect.fs">
      <Link>Reflection/reflect.fs</Link>
    </Compile>
    <Compile Include="math\n.fsi">
      <Link>Numerics/n.fsi</Link>
    </Compile>
    <Compile Include="math\n.fs">
      <Link>Numerics/n.fs</Link>
    </Compile>
    <Compile Include="math\z.fsi">
      <Link>Numerics/z.fsi</Link>
    </Compile>
    <Compile Include="math\z.fs">
      <Link>Numerics/z.fs</Link>
    </Compile>
    <Compile Include="..\..\utils\sformat.fsi">
      <Link>Printf/sformat.fsi</Link>
    </Compile>
    <Compile Include="..\..\utils\sformat.fs">
      <Link>Printf/sformat.fs</Link>
    </Compile>
    <Compile Include="printf.fsi">
      <Link>Printf/printf.fsi</Link>
    </Compile>
    <Compile Include="printf.fs">
      <Link>Printf/printf.fs</Link>
    </Compile>
    <Compile Include="quotations.fsi">
      <Link>Quotations/quotations.fsi</Link>
    </Compile>
    <Compile Include="quotations.fs">
      <Link>Quotations/quotations.fs</Link>
    </Compile>
    <Compile Include="nativeptr.fsi">
      <Link>NativeInterop/nativeptr.fsi</Link>
    </Compile>
    <Compile Include="nativeptr.fs">
      <Link>NativeInterop/nativeptr.fs</Link>
    </Compile>
    <Compile Include="event.fsi">
      <Link>Control/event.fsi</Link>
    </Compile>
    <Compile Include="event.fs">
      <Link>Control/event.fs</Link>
    </Compile>
    <Compile Include="async.fsi">
      <Link>Control/async.fsi</Link>
    </Compile>
    <Compile Include="async.fs">
      <Link>Control/async.fs</Link>
    </Compile>
    <Compile Include="eventmodule.fsi">
      <Link>Control/eventmodule.fsi</Link>
    </Compile>
    <Compile Include="eventmodule.fs">
      <Link>Control/eventmodule.fs</Link>
    </Compile>
    <Compile Include="observable.fsi">
      <Link>Control/observable.fsi</Link>
    </Compile>
    <Compile Include="observable.fs">
      <Link>Control/observable.fs</Link>
    </Compile>
    <Compile Include="mailbox.fsi">
      <Link>MailboxProcessor/mailbox.fsi</Link>
    </Compile>
    <Compile Include="mailbox.fs">
      <Link>MailboxProcessor/mailbox.fs</Link>
    </Compile>
    <Compile Include="Linq.fsi">
      <Link>Queries/Linq.fsi</Link>
    </Compile>
    <Compile Include="Linq.fs">
      <Link>Queries/Linq.fs</Link>
    </Compile>
    <Compile Include="MutableTuple.fs">
      <Link>Queries/MutableTuple.fs</Link>
    </Compile>
    <Compile Include="QueryExtensions.fs">
      <Link>Queries/QueryExtensions.fs</Link>
    </Compile>
    <Compile Include="Query.fsi">
      <Link>Queries/Query.fsi</Link>
    </Compile>
    <Compile Include="Query.fs">
      <Link>Queries/Query.fs</Link>
    </Compile>
    <Compile Include="SI.fs">
      <Link>Units/SI.fs</Link>
    </Compile>
    <Compile Include="fslib-extra-pervasives.fsi">
      <Link>Extras/fslib-extra-pervasives.fsi</Link>
    </Compile>
    <Compile Include="fslib-extra-pervasives.fs">
      <Link>Extras/fslib-extra-pervasives.fs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetDotnetProfile)' != 'coreclr'">
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Numerics">
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetDotnetProfile)' == 'coreclr'">
    <None Include="project.json" />
  </ItemGroup>

  <!-- References -->
  <Import Project="$(FSharpSourcesRoot)\.nuget\NuGet.targets" Condition="Exists('$(FSharpSourcesRoot)\.nuget\NuGet.targets')" />
  <Import Project="$(FSharpSourcesRoot)\FSharpSource.targets" />

  <!-- Hook compilation phase to do custom work -->
  <!-- NOTE: The optdata and sigdata files are no longer needed by the F# compiler (the information is -->
  <!-- integrated as resources into more recent FSharp.Core.dll's. However they are still produced to -->
  <!-- allow older versions of the F# compiler to reference more recent FSharp.Core packages -->
  <Target Name="CopyToBuiltBin" BeforeTargets="AfterCompile" AfterTargets="CoreCompile" >
    <ItemGroup>
      <BuiltProjectOutputGroupKeyOutput Include="$(IntermediateOutputPath)\FSharp.Core.sigdata" />
      <BuiltProjectOutputGroupKeyOutput Include="$(IntermediateOutputPath)\FSharp.Core.optdata" />
    </ItemGroup>
    <Copy SourceFiles="$(IntermediateOutputPath)\FSharp.Core.sigdata" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$(IntermediateOutputPath)\FSharp.Core.optdata" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="nugetpack"
          DependsOnTargets="CreateOrUpdateBuildVersionFile"
          AfterTargets="Build"
          Condition="'$(TargetDotnetProfile)' == 'coreclr' "
          Inputs="@(PackageNuspec)" 
          Outputs='$(FSharpSourcesRoot)\..\$(Configuration)\artifacts\"%(PackageNuspec.Filename)).nupkg'>

    <PropertyGroup>
      <PackageProperties>-prop "licenseUrl=$(PackageLicenceUrl)" -prop "version=$(FSharpCoreFrozenPortablePackageVersion)" -prop "authors=$(PackageAuthors)" -prop "projectUrl=$(PackageProjectUrl)" -prop "tags=$(PackageTags)"</PackageProperties>
    </PropertyGroup>

    <MakeDir Directories="$(FSharpSourcesRoot)\..\artifacts" />
    <SetEnvVar Name="NUGET_PACKAGES" Value="$(NUGET_PACKAGES)" />
    <Exec Command='$(FSharpSourcesRoot)\..\.nuget\nuget.exe pack @(PackageNuspec) -BasePath $(OutputPath.TrimEnd("\")) -ExcludeEmptyDirectories $(PackageProperties) -OutputDirectory $(FSharpSourcesRoot)\..\artifacts' />
  </Target>

</Project>
